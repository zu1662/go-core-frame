definitions:
  app.Response:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 数据集
        type: object
      msg:
        description: 消息
        type: string
    type: object
  models.LoginForm:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.SysDept:
    properties:
      createBy:
        description: 创建人
        type: string
      createTime:
        description: 创建时间
        type: string
      deptName:
        description: 部门名称
        type: string
      id:
        description: 数据库id
        type: integer
      leaderId:
        description: 负责人
        type: integer
      pid:
        description: 父级id
        type: integer
      sort:
        description: 排序
        type: string
      status:
        description: 状态
        type: string
      updateBy:
        description: 修改人
        type: string
      updateTime:
        description: 修改时间
        type: string
    type: object
  models.SysMenu:
    properties:
      cache:
        description: 缓存
        type: string
      component:
        description: 组件地址
        type: string
      createBy:
        description: 创建人
        type: string
      createTime:
        description: 创建时间
        type: string
      icon:
        description: 图标
        type: string
      id:
        description: 数据库id
        type: integer
      name:
        description: 名称
        type: string
      path:
        description: 路径
        type: string
      permission:
        description: 权限
        type: string
      pid:
        description: 父级id
        type: integer
      sort:
        description: 排序
        type: string
      title:
        description: 标题
        type: string
      type:
        description: 类型 0目录1菜单2按钮
        type: string
      updateBy:
        description: 修改人
        type: string
      updateTime:
        description: 修改时间
        type: string
      visible:
        description: 可见
        type: string
    type: object
  models.SysPost:
    properties:
      createBy:
        description: 创建人
        type: string
      createTime:
        description: 创建时间
        type: string
      description:
        description: 描述
        type: string
      id:
        description: 数据库id
        type: integer
      postCode:
        description: 编码
        type: string
      postName:
        description: 名称
        type: string
      sort:
        description: 排序
        type: string
      status:
        description: 状态
        type: string
      updateBy:
        description: 修改人
        type: string
      updateTime:
        description: 修改时间
        type: string
    type: object
  models.SysUser:
    properties:
      avatar:
        description: 头像
        type: string
      createBy:
        description: 创建人
        type: string
      createTime:
        description: 创建时间
        type: string
      deptId:
        description: 部门编码
        type: integer
      email:
        description: 邮箱
        type: string
      gender:
        description: 性别
        type: string
      id:
        description: 数据库id
        type: integer
      mobile:
        description: 手机号
        type: string
      password:
        description: 密码
        type: string
      postId:
        description: 职位编码
        type: integer
      roleId:
        description: 角色编码
        type: integer
      status:
        description: 状态
        type: string
      updateBy:
        description: 修改人
        type: string
      updateTime:
        description: 修改时间
        type: string
      userCode:
        description: 编码
        type: string
      userName:
        description: 名称
        type: string
      uuid:
        description: UUID
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/v1/dept/add:
    post:
      parameters:
      - description: 部门数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysDept'
      responses:
        "200":
          description: '{"code": 0, "message": "添加失败"}'
          schema:
            type: string
      summary: 添加部门
      tags:
      - dept
  /api/v1/menu/add:
    post:
      parameters:
      - description: 部门数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysMenu'
      responses:
        "200":
          description: '{"code": 0, "message": "添加失败"}'
          schema:
            type: string
      summary: 添加菜单
      tags:
      - menu
  /api/v1/post/add:
    post:
      parameters:
      - description: 岗位数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysPost'
      responses:
        "200":
          description: '{"code": 0, "message": "添加失败"}'
          schema:
            type: string
      summary: 添加岗位
      tags:
      - post
  /api/v1/user/add:
    post:
      parameters:
      - description: 用户数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysUser'
      responses:
        "200":
          description: '{"code": 0, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Authrization: []
      summary: 添加用户
      tags:
      - user
  /base/getuserinfo:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 200, "data": {...}, "msg": "ok"}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authorization: []
      summary: 获取当前登录用户详情信息
      tags:
      - base
  /base/login:
    post:
      parameters:
      - description: 用户登录接口
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{"token": "token value", "expire": "expire time"},"msg":"ok"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - base
  /base/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":null,"msg":"ok"}'
          schema:
            type: string
      security:
      - Authorization: []
      summary: 用户退出
      tags:
      - base
  /dept/delete/{deptId}:
    delete:
      parameters:
      - description: 部门id
        in: query
        name: deptId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 1, "msg": "删除成功"}'
          schema:
            type: string
      summary: 删除部门
      tags:
      - dept
  /dept/info/{deptId}:
    get:
      parameters:
      - description: 部门编码
        in: query
        name: deptId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 1, "data": {...}, "msg": "ok"}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authorization: []
      summary: 获取部门详情信息
      tags:
      - dept
  /dept/tree:
    get:
      parameters:
      - description: 部门名称
        in: query
        name: deptName
        type: string
      - description: 状态
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 1, "msg": "ok", "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authrization: []
      summary: 部门tree
      tags:
      - dept
  /dept/update/{deptId}:
    put:
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysDept'
      responses:
        "200":
          description: '{"code": 0, "msg": "修改失败"}'
          schema:
            type: string
      summary: 更新部门
      tags:
      - dept
  /log/operloginfo:
    get:
      parameters:
      - description: id
        in: query
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "msg": "ok", "data": {...}}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Bearer: []
      summary: 登录日志详情
      tags:
      - log
  /log/operloglist:
    get:
      parameters:
      - description: 登录名称
        in: query
        name: operName
        type: string
      - description: 操作人ip地址
        in: query
        name: operIp
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "msg": "ok", "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Bearer: []
      summary: 登录日志列表
      tags:
      - log
  /menu/delete/{menuId}:
    delete:
      parameters:
      - description: 菜单id
        in: query
        name: menuId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 1, "msg": "删除成功"}'
          schema:
            type: string
      summary: 删除菜单
      tags:
      - menu
  /menu/info/{menuId}:
    get:
      parameters:
      - description: 菜单编码
        in: query
        name: menuId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 1, "data": {...}, "msg": "ok"}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authorization: []
      summary: 获取菜单详情信息
      tags:
      - menu
  /menu/tree:
    get:
      parameters:
      - description: 名称
        in: query
        name: name
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      responses:
        "200":
          description: '{"code": 1, "msg": "ok", "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authrization: []
      summary: 菜单tree
      tags:
      - menu
  /menu/update/{menuId}:
    put:
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysMenu'
      responses:
        "200":
          description: '{"code": 0, "msg": "修改失败"}'
          schema:
            type: string
      summary: 更新菜单
      tags:
      - menu
  /post/delete/{postId}:
    delete:
      parameters:
      - description: 岗位id
        in: query
        name: postId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 1, "msg": "删除成功"}'
          schema:
            type: string
      summary: 删除岗位
      tags:
      - dept
  /post/info/{postId}:
    get:
      parameters:
      - description: 部门编码
        in: query
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 1, "data": {...}, "msg": "ok"}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authorization: []
      summary: 获取岗位详情信息
      tags:
      - post
  /post/list:
    get:
      parameters:
      - description: 岗位编码
        in: query
        name: postCode
        type: string
      - description: 岗位名称
        in: query
        name: postName
        type: string
      - description: 状态
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 1, "msg": "ok", "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authrization: []
      summary: 岗位列表
      tags:
      - post
  /post/update/{postId}:
    put:
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysPost'
      responses:
        "200":
          description: '{"code": 0, "msg": "修改失败"}'
          schema:
            type: string
      summary: 更新岗位
      tags:
      - post
  /user/delete/{userId}:
    delete:
      parameters:
      - description: 用户id
        in: query
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 1, "msg": "删除成功"}'
          schema:
            type: string
      security:
      - Authrization: []
      summary: 删除用户
      tags:
      - user
  /user/info/{userId}:
    get:
      parameters:
      - description: 用户编码
        in: query
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 1, "data": [...], "msg": "ok"}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authorization: []
      summary: 获取用户详情信息
      tags:
      - user
  /user/list:
    get:
      parameters:
      - description: 用户名称
        in: query
        name: userName
        type: string
      - description: 手机
        in: query
        name: mobile
        type: string
      - description: 状态
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 1, "msg": "ok", "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - Authrization: []
      summary: 用户列表
      tags:
      - user
  /user/update/{userId}:
    put:
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysUser'
      responses:
        "200":
          description: '{"code": 0, "msg": "修改失败"}'
          schema:
            type: string
      security:
      - Authrization: []
      summary: 更新用户
      tags:
      - user
swagger: "2.0"
